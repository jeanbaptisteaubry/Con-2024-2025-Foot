@startuml
skinparam classAttributeIconSize 0
class Humain {
 -nom: string
    -prenom: string
    -dateNaissance: Date
    +Humain(nom: string, prenom: string, dateNaissance: Date)
    +getNom(): string
    +setNom(nom: string): void
    +getPrenom(): string
    +setPrenom(prenom: string): void
    +getDateNaissance(): Date
    +setDateNaissance(dateNaissance: Date): void
    +donneTexte(): string
}
Humain <|-- Arbitre
class Arbitre{
    -nationalite: string

    +Arbitre(nom: string, prenom: string, dateNaissance: Date, nationalite: string)
    +getNationalite(): string
    +donneTexte(): string
}

class Stade{
    -nom: string
    -ville: string
    -capacite: int
    +Stade(nom: string, ville: string, capacite: int)
    +getNom(): string
    +getVille(): string
    +getCapacite(): int
    +donneTexte(): string
}
Humain <|-- Joueur
class Joueur{
    -numero: int
    +Joueur(nom: string, prenom: string, dateNaissance: Date, numero: int, equipe: Equipe)
    +getNumero(): int
    +setNumero(numero: int): void
    +getEquipe(): Equipe
    +setEquipe(equipe: Equipe): void
    +donneTexte(): string
}

Humain <|-- Selectionneur
class Selectionneur{
    -nationalite: string
    +Selectionneur(nom: string, prenom: string, dateNaissance: Date, nationalite: string, equipe: Equipe)
    +getNationalite(): string
    +getEquipe(): Equipe
    +setEquipe(equipe: Equipe): void
    +donneTexte(): string
}

class Equipe{
    -nom: string
    -pays: string
    +Equipe(nom: string, pays: string, selectionneur: Selectionneur)
    +getNom(): string
    +getPays(): string
    +getSelectionneur(): Selectionneur
    +setSelectionneur(selectionneur: Selectionneur): void
    +getJoueurs(): Joueur[]
    +ajouterJoueur(joueur: Joueur): void
    +donneTexte(): string
}

 Equipe "1 -equipe" -- "0..* -joueurs" Joueur
Equipe  "0..1 equipe" -- "0..1 -selectionneur" Selectionneur

class Evenement{
    -horaire: Time
    -description: string
    +Evenement(horaire: Time, description: string)
    +getHoraire(): Time
    +setHoraire(horaire: Time): void
    +getDescription(): string
    +setDescription(description: string): void
    +donneTexte(): string
}

Joueur "1 \n-joueurEntrant" <--x  Remplacement
Joueur "1 \n-joueurSortant" <--x  Remplacement
Evenement <|-- Remplacement
class Remplacement{

    +Remplacement(horaire: Time, description: string, joueurSortant: Joueur, joueurEntrant: Joueur)
    +getJoueurSortant(): Joueur
    +setJoueurSortant(joueurSortant: Joueur): void
    +getJoueurEntrant(): Joueur
    +setJoueurEntrant(joueurEntrant: Joueur): void
    +donneTexte(): string
}

Evenement <|-- FaitDeJeu
Joueur "1 \n-joueurAuteur" <--x  FaitDeJeu
class FaitDeJeu{
    +FaitDeJeu(horaire: Time, description: string, joueurAuteur: Joueur)
    +getJoueurAuteur(): Joueur
    +setJoueurAuteur(joueurAuteur: Joueur): void
    +donneTexte(): string
}

 FaitDeJeu <|-- Faute
Joueur "1 \n-joueurVictime" <--x  Faute
class Faute{
    -carton: string
    +Faute(horaire: Time, description: string, joueurAuteur: Joueur, joueurVictime: Joueur, carton: string)
    +getJoueurVictime(): Joueur
    +setJoueurVictime(joueurVictime: Joueur): void
    +getCarton(): string
    +setCarton(carton: string): void
    +donneTexte(): string
}

FaitDeJeu <|--  But
Equipe "1 \n-EquipeProfit" <--x  But
class But{
    -penalty: boolean
    +But(horaire: Time, description: string, joueurAuteur: Joueur, equipeProfit: Equipe, penalty: boolean)
    +isPenalty(): boolean
    +setPenalty(penalty: boolean): void
    +donneTexte(): string
}

Equipe "1 \n-equipeDomicile" <--x  Match
Equipe "1 \n-equipeExterieur" <--x  Match
Stade "1 \n-stadeMatch" <--x  Match
Arbitre "1 \n-arbitrer" <--x  Match
Evenement "0..* \n-evenements" <--x  Match

class Match{
    -scoreDomicile: int
    -scoreExterieur: int
    +Match(horaire: Time, description: string, equipeDomicile: Equipe, equipeExterieur: Equipe, stadeMatch: Stade, arbitrer: Arbitre)
    +getScoreDomicile(): int
    +getScoreExterieur(): int
    +getEquipeDomicile(): Equipe
    +getEquipeExterieur(): Equipe
    +getStadeMatch(): Stade
    +getArbitrer(): Arbitre
    +getEvenements(): Evenement[]
    +ajouterEvenement(evenement: Evenement): void
    +donneTexte(): string
}
@enduml